import fetch from "node-fetch";

const BASE = process.env.ADMIN_BASE || "https://api.1administration.com/v1";
const AGENT = process.env.ADMIN_AGENT_ID;

function adminAuthHeader() {
  const b64 = Buffer.from(`${process.env.ADMIN_USER}:${process.env.ADMIN_PASS}`).toString("base64");
  return { Authorization: `Basic ${b64}` }; // or Bearer <base64> also allowed
}

export async function getPaymentMethod(memberId) {
  const url = `${BASE}/${AGENT}/paymentmethod/${encodeURIComponent(memberId)}.json`;
  const r = await fetch(url, { headers: adminAuthHeader() });
  if (r.status === 404) return null;
  if (!r.ok) throw new Error(`admin paymentmethod ${r.status}: ${await r.text()}`);
  const j = await r.json();
  return j.paymentmethod || null;
}

export async function getTransactionStatus({ memberId, productId = 0, policyNumber = 0, paymentNumber = 0 }) {
  const url = `${BASE}/${AGENT}/transactionstatus/${memberId}/${productId}/${policyNumber}/${paymentNumber}.json`;
  const r = await fetch(url, { headers: adminAuthHeader() });
  if (r.status === 404) return null;
  if (!r.ok) throw new Error(`admin txstatus ${r.status}: ${await r.text()}`);
  const j = await r.json();
  return j.transactionstatus || null;
}

export async function getSignatureExists({ memberId, productId = 0, policyNumber = 0 }) {
  const url = `${BASE}/${AGENT}/signatureexists/${memberId}/${productId}/${policyNumber}.json`;
  const r = await fetch(url, { headers: adminAuthHeader() });
  if (r.status === 404) return null;
  if (!r.ok) throw new Error(`admin sigexists ${r.status}: ${await r.text()}`);
  const j = await r.json();
  return j.signatureexists || null;
}
